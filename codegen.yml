overwrite: true
hooks:
    afterAllFileWrite:
        - prettier --write
generates:
    modules/balancer-subgraph/generated/balancer-subgraph-types.ts:
        schema: ${BALANCER_SUBGRAPH}
        documents: 'modules/balancer-subgraph/balancer-subgraph-queries.graphql'
        plugins:
            - typescript
            - typescript-operations
            - typescript-graphql-request
        config:
            scalars:
                BigInt: string
                Bytes: string
                BigDecimal: string
    modules/balancer-subgraph/generated/balancer-subgraph-schema.graphql:
        schema: ${BALANCER_SUBGRAPH}
        plugins:
            - schema-ast
    modules/masterchef-subgraph/generated/masterchef-subgraph-types.ts:
        schema: ${MASTERCHEF_SUBGRAPH}
        documents: 'modules/masterchef-subgraph/masterchef-subgraph-queries.graphql'
        plugins:
            - typescript
            - typescript-operations
            - typescript-graphql-request
        config:
            scalars:
                BigInt: string
                Bytes: string
                BigDecimal: string
    modules/masterchef-subgraph/generated/masterchef-subgraph-schema.graphql:
        schema: ${MASTERCHEF_SUBGRAPH}
        plugins:
            - schema-ast
    modules/locking/generated/locking-subgraph-types.ts:
        schema: ${LOCKING_SUBGRAPH}
        documents: 'modules/locking/locking-subgraph-queries.graphql'
        plugins:
            - typescript
            - typescript-operations
            - typescript-graphql-request
        config:
            scalars:
                BigInt: string
                Bytes: string
                BigDecimal: string
    modules/locking/generated/locking-subgraph-schema.graphql:
        schema: ${LOCKING_SUBGRAPH}
        plugins:
            - schema-ast
    modules/blocks-subgraph/generated/blocks-subgraph-types.ts:
        schema: ${BLOCKS_SUBGRAPH}
        documents: 'modules/blocks-subgraph/block-subgraph-queries.graphql'
        plugins:
            - typescript
            - typescript-operations
            - typescript-graphql-request
        config:
            scalars:
                BigInt: string
                Bytes: string
                BigDecimal: string
    modules/blocks-subgraph/generated/blocks-subgraph-schema.graphql:
        schema: ${BLOCKS_SUBGRAPH}
        plugins:
            - schema-ast
    modules/beets-bar-subgraph/generated/beets-bar-subgraph-types.ts:
        schema: ${BEETS_BAR_SUBGRAPH}
        documents: 'modules/beets-bar-subgraph/beets-bar-subgraph-queries.graphql'
        plugins:
            - typescript
            - typescript-operations
            - typescript-graphql-request
        config:
            scalars:
                BigInt: string
                Bytes: string
                BigDecimal: string
    modules/beets-bar-subgraph/generated/beets-bar-subgraph-schema.graphql:
        schema: ${BEETS_BAR_SUBGRAPH}
        plugins:
            - schema-ast
    graphql_schema_generated.ts:
        schema: ./modules/**/*.gql
        plugins:
            - add:
                  content: |
                      import { gql } from 'apollo-server-express';
                      export const schema = gql`
                      #\n# THIS FILE IS AUTOGENERATED — DO NOT EDIT IT\n#
            - schema-ast
            - add:
                  placement: 'append'
                  content: '`;'
    schema.ts:
        schema: ./modules/**/*.gql
        plugins:
            - add:
                  content: "/*\n * THIS FILE IS AUTOGENERATED — DO NOT EDIT IT\n */"
            - typescript
            - typescript-resolvers
        config:
            declarationKind: interface
            immutableTypes: false
            useIndexSignature: true
            enumsAsTypes: true
            contextType: ./app/Context#Context
            #defaultMapper: Partial<{T}> #uncomment this to handle partial query resolution easier
            scalars:
                #    Binary: Buffer
                #    Cursor: string
                Date: Date
                UUID: string
                GqlBigNumber: string
                Bytes: string
                BigDecimal: string
                BigInt: string
