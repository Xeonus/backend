model PrismaUser {
    address                 String              @id

    userSnapshots           PrismaUserPoolBalanceSnapshot[]

    walletBalances          PrismaUserWalletBalance[]
    stakedBalances          PrismaUserStakedBalance[]
}

model PrismaUserWalletBalance {
    @@id([userAddress, tokenAddress, chain])
    poolId                  String?
    pool                    PrismaPool?         @relation(fields:[poolId, chain], references: [id, chain])
    userAddress             String
    user                    PrismaUser          @relation(fields:[userAddress], references: [address])
    tokenAddress            String
    token                   PrismaToken         @relation(fields:[tokenAddress, chain], references: [tokenAddress, chain])
    chain                   Chain

    balance                 String
    balanceNum              Float
    updatedAt               DateTime            @updatedAt



}
model PrismaUserStakedBalance {
    @@id([userAddress, tokenAddress, chain])
    userAddress             String
    user                    PrismaUser          @relation(fields:[userAddress], references: [address])
    poolId                  String
    pool                    PrismaPool          @relation(fields:[poolId, chain], references: [id, chain], map: "PrismaUserStakedBalance_Pool_fkey")
    tokenAddress            String
    token                   PrismaToken         @relation(fields:[tokenAddress, chain], references: [tokenAddress, chain])
    staking                 PrismaPoolStaking   @relation(fields:[poolId, chain], references: [poolId, chain])
    chain                   Chain
    balance                 String
    balanceNum              Float
    updatedAt               DateTime            @updatedAt
}

model PrismaUserBalanceSyncStatus {
    type                PrismaUserBalanceType @id
    blockNumber         Int
}

enum PrismaUserBalanceType {
    WALLET
    STAKED
    RELIQUARY
}

model PrismaUserPoolBalanceSnapshot {
    @@id([userAddress, poolId, chain, timestamp])
    userAddress             String
    user                    PrismaUser          @relation(fields:[userAddress], references: [address])
    timestamp               Int

    poolToken               String
    poolId                  String
    pool                    PrismaPool          @relation(fields:[poolId, chain], references: [id, chain])

    chain                   Chain

    walletBalance           String
    gaugeBalance            String
    farmBalance             String
    totalBalance            String
    percentShare            String
    totalValueUSD           String
    fees24h                 String
}
